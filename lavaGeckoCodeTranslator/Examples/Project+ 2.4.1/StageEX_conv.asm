# Note: From "Source/Project+/"

Custom Stage Select Screen [Spunit, Phantom Wings, SOJ, Yohan1044]
* 046B8F5C 7C802378             # 32-Bit Write @ $(ba + 0x006B8F5C):  0x7C802378
* 046B8F64 7C6300AE             # 32-Bit Write @ $(ba + 0x006B8F64):  0x7C6300AE
* 040AF618 5460083C             # 32-Bit Write @ $(ba + 0x000AF618):  0x5460083C
* 040AF68C 38840002             # 32-Bit Write @ $(ba + 0x000AF68C):  0x38840002
* 040AF6AC 5463083C             # 32-Bit Write @ $(ba + 0x000AF6AC):  0x5463083C
* 040AF6C0 88030001             # 32-Bit Write @ $(ba + 0x000AF6C0):  0x88030001
* 040AF6E8 3860FFFF             # 32-Bit Write @ $(ba + 0x000AF6E8):  0x3860FFFF
* 040AF59C 3860000C             # 32-Bit Write @ $(ba + 0x000AF59C):  0x3860000C
* 060B91C8 00000018             # String Write (24 characters) @ $(ba + 0x000B91C8):
* BFA10014 7CDF3378             # 	0xBF, 0xA1, 0x00, 0x14, 0x7C, 0xDF, 0x33, 0x78
* 7CBE2B78 7C7D1B78             # 	0x7C, 0xBE, 0x2B, 0x78, 0x7C, 0x7D, 0x1B, 0x78
* 2D05FFFF 418A0014             # 	0x2D, 0x05, 0xFF, 0xFF, 0x41, 0x8A, 0x00, 0x14
* 006B929C 00000015             # 8-Bit Write @ $(ba + 0x006B929C):  0x15
* 066B99D8 00000015             # String Write (21 characters) @ $(ba + 0x006B99D8):
* 0E110C05 0F241214             # 	0x0E, 0x11, 0x0C, 0x05, 0x0F, 0x24, 0x12, 0x14
* 15180104 230A201C             # 	0x15, 0x18, 0x01, 0x04, 0x23, 0x0A, 0x20, 0x1C
* 1A002802 16000000             # 	0x1A, 0x00, 0x28, 0x02, 0x16
* 006B92A4 00000016             # 8-Bit Write @ $(ba + 0x006B92A4):  0x16
* 066B9A58 00000016             # String Write (22 characters) @ $(ba + 0x006B9A58):
* 091B0619 22262A13             # 	0x09, 0x1B, 0x06, 0x19, 0x22, 0x26, 0x2A, 0x13
* 03212527 1F08102B             # 	0x03, 0x21, 0x25, 0x27, 0x1F, 0x08, 0x10, 0x2B
* 070D0B17 1E1D0000             # 	0x07, 0x0D, 0x0B, 0x17, 0x1E, 0x1D
* 06407AAC 0000009E             # String Write (158 characters) @ $(ba + 0x00407AAC):
* 01010202 03030404             # 	0x01, 0x01, 0x02, 0x02, 0x03, 0x03, 0x04, 0x04
* 05050606 07070808             # 	0x05, 0x05, 0x06, 0x06, 0x07, 0x07, 0x08, 0x08
* 0909330A 0B0B0C0C             # 	0x09, 0x09, 0x33, 0x0A, 0x0B, 0x0B, 0x0C, 0x0C
* 0D0D0E0E 130F1410             # 	0x0D, 0x0D, 0x0E, 0x0E, 0x13, 0x0F, 0x14, 0x10
* 15111612 17131814             # 	0x15, 0x11, 0x16, 0x12, 0x17, 0x13, 0x18, 0x14
* 19151C16 1D171E18             # 	0x19, 0x15, 0x1C, 0x16, 0x1D, 0x17, 0x1E, 0x18
* 1F19201A 211B221C             # 	0x1F, 0x19, 0x20, 0x1A, 0x21, 0x1B, 0x22, 0x1C
* 231D241E 251F2932             # 	0x23, 0x1D, 0x24, 0x1E, 0x25, 0x1F, 0x29, 0x32
* 2A332B34 2C352D36             # 	0x2A, 0x33, 0x2B, 0x34, 0x2C, 0x35, 0x2D, 0x36
* 2F373038 3139323A             # 	0x2F, 0x37, 0x30, 0x38, 0x31, 0x39, 0x32, 0x3A
* 2E3B0064 4020373C             # 	0x2E, 0x3B, 0x00, 0x64, 0x40, 0x20, 0x37, 0x3C
* 41214222 43234424             # 	0x41, 0x21, 0x42, 0x22, 0x43, 0x23, 0x44, 0x24
* 45254626 47274828             # 	0x45, 0x25, 0x46, 0x26, 0x47, 0x27, 0x48, 0x28
* 49294A2A 4B2B4C2C             # 	0x49, 0x29, 0x4A, 0x2A, 0x4B, 0x2B, 0x4C, 0x2C
* 4D2D4E2E 4F2F5030             # 	0x4D, 0x2D, 0x4E, 0x2E, 0x4F, 0x2F, 0x50, 0x30
* 5131523D 533E543F             # 	0x51, 0x31, 0x52, 0x3D, 0x53, 0x3E, 0x54, 0x3F
* 55405641 57425843             # 	0x55, 0x40, 0x56, 0x41, 0x57, 0x42, 0x58, 0x43
* 59445A45 5B465C47             # 	0x59, 0x44, 0x5A, 0x45, 0x5B, 0x46, 0x5C, 0x47
* 5D485E49 5F4A604B             # 	0x5D, 0x48, 0x5E, 0x49, 0x5F, 0x4A, 0x60, 0x4B
* 614C624D 634E0000             # 	0x61, 0x4C, 0x62, 0x4D, 0x63, 0x4E

Stage Roster Expansion System v2.0 [Phantom Wings]
* E0000000 80008000             # Full Terminator: ba = 0x80000000, po = 0x80000000
* 04043B20 380000FF             # 32-Bit Write @ $(ba + 0x00043B20):  0x380000FF
* 04043B40 1C060018             # 32-Bit Write @ $(ba + 0x00043B40):  0x1C060018
* 04043B58 38840018             # 32-Bit Write @ $(ba + 0x00043B58):  0x38840018
* 04949C8C 3884B460             # 32-Bit Write @ $(ba + 0x00949C8C):  0x3884B460
* 04949D10 3884B460             # 32-Bit Write @ $(ba + 0x00949D10):  0x3884B460
* 04949E20 3884B460             # 32-Bit Write @ $(ba + 0x00949E20):  0x3884B460
* 04949EFC 3884B460             # 32-Bit Write @ $(ba + 0x00949EFC):  0x3884B460
HOOK @ $8094A588                # Address = $(ba + 0x0094A588)
{
	lhz r3, 0x1a(r3)                # 0xA063001A
	cmpwi r3, 0x40                  # 0x2C030040
	blt 0x8                         # 0x41800008
	li r3, 0x0                      # 0x38600000
	nop                             # 0x60000000
}
HOOK @ $8094A1D0                # Address = $(ba + 0x0094A1D0)
{
	mr r29, r3                      # 0x7C7D1B78
	cmpwi r3, -0x1                  # 0x2C03FFFF
	bne 0x8                         # 0x40820008
	lis r29, 0x3f                   # 0x3FA0003F
	nop                             # 0x60000000
}
* 04015564 48000010             # 32-Bit Write @ $(ba + 0x00015564):  0x48000010
* 2042AEB0 00000041             # 32-Bit If Equal: If Val @ $(ba + 0x0042AEB0) == 0x00000041
* 0442AEB0 00000000             # 32-Bit Write @ $(ba + 0x0042AEB0):  0x00000000
* 80000000 8042AEB0             # Set Gecko Register: gr0 = 0x8042AEB0
* 80000001 8042AEB0             # Set Gecko Register: gr1 = 0x8042AEB0
* 60000030 00000000             # Set Repeat: Repeat 48 times, Store in b0
* 8A001801 00000000             # 	Memory Copy 1: Copy 0x18 byte(s) from $(gr0) to $(gr1)
* 86000000 00000024             # 	Gecko Reg Arith (Immediate): gr0 = gr0 + 0x00000024
* 86000001 00000018             # 	Gecko Reg Arith (Immediate): gr1 = gr1 + 0x00000018
* 62000000 00000000             # Execute Repeat: Execute Repeat in b0
* 0042B348 024B0000             # 8-Bit Write @ $(ba + 0x0042B348):  0x00 (588 times)
* 0442B348 00000040             # 32-Bit Write @ $(ba + 0x0042B348):  0x00000040
* 0642B34C 00000010             # String Write (16 characters, 2 strings) @ $(ba + 0x0042B34C):
* 73745F63 7573746F             # 	   "st_custo ...
* 6D00002E 72656C00             # 	... m"".rel"
* 80000000 8042BC18             # Set Gecko Register: gr0 = 0x8042BC18
* 80000001 8042B460             # Set Gecko Register: gr1 = 0x8042B460
* 8A010001 00000000             # Memory Copy 1: Copy 0x100 byte(s) from $(gr0) to $(gr1)
* 0442B560 8042BC14             # 32-Bit Write @ $(ba + 0x0042B560):  0x8042BC14
* 0042BC18 010F0000             # 8-Bit Write @ $(ba + 0x0042BC18):  0x00 (272 times)
* 0642BC14 00000008             # String Write (8 characters) @ $(ba + 0x0042BC14):
* 43757374 6F6D0000             # 	"Custom"
* E0000000 80008000             # Full Terminator: ba = 0x80000000, po = 0x80000000
* 04043B34 483E783C             # 32-Bit Write @ $(ba + 0x00043B34):  0x483E783C
* 0642B370 00000050             # String Write (80 characters) @ $(ba + 0x0042B370):
* 2C060031 4080000C             # 	0x2C, 0x06, 0x00, 0x31, 0x40, 0x80, 0x00, 0x0C
* 80040000 48000040             # 	0x80, 0x04, 0x00, 0x00, 0x48, 0x00, 0x00, 0x40
* 3806000F 7C030000             # 	0x38, 0x06, 0x00, 0x0F, 0x7C, 0x03, 0x00, 0x00
* 40820030 3866FFD0             # 	0x40, 0x82, 0x00, 0x30, 0x38, 0x66, 0xFF, 0xD0
* 38C4000F 38860001             # 	0x38, 0xC4, 0x00, 0x0F, 0x38, 0x86, 0x00, 0x01
* 3CA08042 60A5B450             # 	0x3C, 0xA0, 0x80, 0x42, 0x60, 0xA5, 0xB4, 0x50
* 38E00000 7E6802A6             # 	0x38, 0xE0, 0x00, 0x00, 0x7E, 0x68, 0x02, 0xA6
* 4BFCB811 7E6803A6             # 	0x4B, 0xFC, 0xB8, 0x11, 0x7E, 0x68, 0x03, 0xA6
* 38C00031 4BC1878C             # 	0x38, 0xC0, 0x00, 0x31, 0x4B, 0xC1, 0x87, 0x8C
* 3884FFE8 4BC1877C             # 	0x38, 0x84, 0xFF, 0xE8, 0x4B, 0xC1, 0x87, 0x7C
* 04949C88 4BAE1749             # 32-Bit Write @ $(ba + 0x00949C88):  0x4BAE1749
* 04949D0C 4BAE16C5             # 32-Bit Write @ $(ba + 0x00949D0C):  0x4BAE16C5
* 04949E1C 4BAE15B5             # 32-Bit Write @ $(ba + 0x00949E1C):  0x4BAE15B5
* 04949F08 4BAE14C9             # 32-Bit Write @ $(ba + 0x00949F08):  0x4BAE14C9
* 0642B3D0 00000060             # String Write (96 characters) @ $(ba + 0x0042B3D0):
* 9421FF80 BC610010             # 	0x94, 0x21, 0xFF, 0x80, 0xBC, 0x61, 0x00, 0x10
* 7C6802A6 9061000C             # 	0x7C, 0x68, 0x02, 0xA6, 0x90, 0x61, 0x00, 0x0C
* 2C000040 41800030             # 	0x2C, 0x00, 0x00, 0x40, 0x41, 0x80, 0x00, 0x30
* 7C030378 3863FFC1             # 	0x7C, 0x03, 0x03, 0x78, 0x38, 0x63, 0xFF, 0xC1
* 3CC08042 60C6BC1C             # 	0x3C, 0xC0, 0x80, 0x42, 0x60, 0xC6, 0xBC, 0x1C
* 38860001 3CA08042             # 	0x38, 0x86, 0x00, 0x01, 0x3C, 0xA0, 0x80, 0x42
* 60A5B450 38E00000             # 	0x60, 0xA5, 0xB4, 0x50, 0x38, 0xE0, 0x00, 0x00
* 39200000 4BFCB7AD             # 	0x39, 0x20, 0x00, 0x00, 0x4B, 0xFC, 0xB7, 0xAD
* 38000040 540013BA             # 	0x38, 0x00, 0x00, 0x40, 0x54, 0x00, 0x13, 0xBA
* 8061000C 7C6803A6             # 	0x80, 0x61, 0x00, 0x0C, 0x7C, 0x68, 0x03, 0xA6
* B8610010 80210000             # 	0xB8, 0x61, 0x00, 0x10, 0x80, 0x21, 0x00, 0x00
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00
* 0042B455 00000078             # 8-Bit Write @ $(ba + 0x0042B455):  0x78
* 0442B45C 00000002             # 32-Bit Write @ $(ba + 0x0042B45C):  0x00000002

STGCUSTOM01: always play T05: [FD: Classic Mode Master Hand]
* 28708CEB 00000040             # 16-Bit If Equal (With Endif): If Val @ $(ba + 0x00708CEA) == 0x0040
* 4A000000 90180F06             # Set Pointer Offset: po = 0x90180F06
* 14000076 FF0027F1             # 32-Bit Write @ $(po + 0x00000076):  0xFF0027F1
* E0000000 80008000             # Full Terminator: ba = 0x80000000, po = 0x80000000
