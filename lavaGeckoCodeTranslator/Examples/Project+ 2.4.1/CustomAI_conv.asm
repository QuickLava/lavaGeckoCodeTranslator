# Note: From "Source/ProjectM"
# I still don't generally recommend translating mixed files like these, as it can
# sometimes lead to inaccurate translations (as a result of the program losing
# track of BA and PO, since it can't parse some GCTRM directives (setting BA or
# PO directly, through .BA/.PO <- LABEL, for isntance, always causes a desync),
# But here's an example of what such a mixed translation might look like.

CPU DI fix [Bero]
* 04917300 48000040             # 32-Bit Write @ $(ba + 0x00917300):  0x48000040
* 04B8A40C 00000500             # 32-Bit Write @ $(ba + 0x00B8A40C):  0x00000500

CPUs Don't Ignore Other CPUs to Target Humans [Magus]
* 04907D60 4800001C             # 32-Bit Write @ $(ba + 0x00907D60):  0x4800001C

#################################
nana throws without considering human input [Bero, v1.2 by Eon, dual-hook fix by fudgepop01]
#################################
HOOK @ $80903440
{
  # update::aiInput (specifically right before calling aiInput::child_update)
  
  # last line before nana child_update call
    lwz r3, 0x0034 (r31)
    
    # r3 = childAi (AiInput)
    # r4 = nana stick ptr
    # r5 = nana buttons
    # r6 = aiChrIdxPtr
    # r7 = is tap jump enabled

check_if_grabbing:
    mr r14, r3 # AiInput
    lwz r15, 0x44(r14) # AiInput->AiAct r15 = AiAct
    lwz r16, 0x74(r15) # AiAct->AiStat r16 = AiStat
    # AI action
    # checks if between 0x34 and 0x3B which covers all "grabbing/holding" states
    lwz r17, 0xB4(r16)
    # 0x34 = "Catch" (action)
    cmpwi r17, 0x34
    blt+ notThrow
    # 0x3B = "CatchCut" (action)
    cmpwi r17, 0x3B
    bgt+ notThrow
    b setupGrab

setupGrab:
    # grab or setup
    li r17, 0x0
    stw r17, 0x0(r4) # stickX
    stw r17, 0x4(r4) # stickY
    mr r5, r17 # buttons
    # li r17, 0x79 # forces nana into mode that allows ai scripts
    li r17, 0x7e # forces nana into mode that allows ai scripts
    stw r17, 0x48(r14)
    li r17, 0xA
    stb r17, 0x1ba(r16)
    
    lhz r17, 0x78(r15) # r4 = aiScript
    cmpwi r17, 0x6100 # if aiScript = 6100
    beq- inThrowRoutine
    b changeToThrowRoutine

inThrowRoutine:
    # relies on AI script to tell it when the throw is done for some reason?
    # this will only branch if AI var23 is set to 0 :thonk:
    lwz r17, 0x5C(r15)
    cmpwi r17, 0x0
    bne- notThrow

    lwz r17, 0x8(r5)                 # \
    andi. r18, r17, 0x100            # |
    cmpwi r18, 0x100                 # | if cstick is pressed, tell nana to forget about it
    beq changeToThrowRoutine         # |
    stw r18, 0x8(r5)                 # /

    b notThrow

changeToThrowRoutine:

    #act_change to 0x6100
    #args: (AiAct*, unsigned int nextScript, char* nextTargetAIChrIdx, int vanilla ai routine, int unk2)
    
    mr r3, r15 # r3 = AiAct
    li r5, 0x1
    stw r5, 0x5C(r3)      # sets internal AI variable (var23) to 1 for some reason 
    lhz r4, 0x78(r3)

    li r4, 0x6100         # next script
    
    li r0, -0x1             #\ initialise this variable that PMDT never did
    stb r0, 0x24(r1)        #| (stb + addi make it a pointer to 0xFF, -
    addi r5, r1, 0x24       #/ - effectively randomizes the AI target)
    li r6, 0x6100 # unk1 arg
    li r7, 0 # unk2 arg

    # calls act_change(this, 0x6100, &0xFF, 0, 0)
    lis r12, 0x8091
    ori r12, r12, 0x8554
    mtctr r12
    bctr
    # the bctr means it just branches and will not return here at the next blr.
    # Thus: exit

notThrow:
  b %end%
}

HOOK @ $8090366c
{
  # FNTE = Force Nana Throw Execution
  # child_update::aiInput (specifically right before the nana distance check)

FNTE_begin:
    lwz r14, 0x44(r23) # AiInput->AiAct r14 = AiAct
    lwz r15, 0x74(r14) # AiAct->AiStat r15 = AiStat
    
    # AI action (see previous HOOK for explaination)
    lwz r16, 0xB4(r15)
    # 0x34 = "Catch" (action)
    cmpwi r16, 0x34
    blt+ FNTE_normalExec
    # 0x3B = "CatchCut" (action)
    cmpwi r16, 0x3B
    bgt+ FNTE_normalExec
    bl FNTE_cache_large_dist
    b FNTE_normalExec

FNTE_big_long_dist:
    float 9999

FNTE_cache_large_dist:
    mflr r12 # lr is set by the bl here...
    lfs f31, 0x4(r12) # ...which lets us grab the "FNTE_big_long_dist" float based on an offset
    blr

FNTE_normalExec:
    fcmpo 0, f31, f29
}

HOOK @ $809188B0
{
  # forces nana to ignore calls to script 0x1120 while grabbing 
  # r26 = next script
  # r25 = AiActPtr
nana_check:
  lwz r14, 0x74(r25) # r14 = AiStat
  lbz r15, 0xAF(r14) # r15 = character ID
  cmpwi r15, 0x10
  bne end

action_check:
  lwz r15, 0xB4(r14) # r15 = action ID
  cmpwi r15, 0x39 # r39 = grab idle
  bne end

check_if_6100:
  lhz r15, 0x78(r25)
  cmpwi r15, 0x6100
  beq ignore_if_6100

end:
  sth r26, 120(r25)

ignore_if_6100:
}
op nop @ $809036cc

Custom AI Function Loader [Magus]
HOOK @ $8091E108                # Address = $(ba + 0x0091E108)
{
	cmplwi r0, 0x2e                 # 0x2800002E
	ble 0x144                       # 0x40A10144
	rlwinm r7, r31, 24, 31, 31      # (Mask: 0x00000100)# 0x57E7C7FE
	lis r12, 0x8058                 # 0x3D808058
	ori r12, r12, 0x47c             # 0x618C047C
	subi r5, r31, 0x102e            # 0x38BFEFD2
	cmpwi r7, 0x1                   # 0x2C070001
	bne 0x8                         # 0x40A20008
	subi r5, r5, 0x100              # 0x38A5FF00
	rlwinm r5, r5, 2, 0, 29         # (Mask: 0x3fffffff)# 0x54A5103A
	lwz r6, 0x0(r12)                # 0x80CC0000
	cmpw r5, r6                     # 0x7C053000
	bgt 0x110                       # 0x41810110
	lwzx r12, r12, r5               # 0x7D8C282E
	cmpwi r12, 0x0                  # 0x2C0C0000
	beq 0x104                       # 0x41820104
	lis r5, 0x8076                  # 0x3CA08076
	ori r5, r5, 0x4e9c              # 0x60A54E9C
	mr r11, r1                      # 0x7C2B0B78
	b 0x8                           # 0x48000008
	lwz r11, 0x0(r11)               # 0x816B0000
	lwz r10, 0x4(r11)               # 0x814B0004
	cmpw r10, r5                    # 0x7C0A2800
	bne -0xc                        # 0x4082FFF4
	lwz r5, 0x20(r11)               # 0x80AB0020
	lwz r5, 0x60(r5)                # 0x80A50060
	cmpwi r7, 0x1                   # 0x2C070001
	beq 0xc                         # 0x4182000C
	lwz r3, 0x74(r30)               # 0x807E0074
	b 0x64                          # 0x48000064
	lwz r4, 0x74(r30)               # 0x809E0074
	lwz r6, 0x4c(r3)                # 0x80C3004C
	cmpwi r6, 0x0                   # 0x2C060000
	beq 0xbc                        # 0x418200BC
	addi r6, r6, 0x140              # 0x38C60140
	lwz r0, 0xac(r3)                # 0x800300AC
	cmpwi r0, 0x10                  # 0x2C000010
	bne 0x8                         # 0x40A20008
	addi r6, r6, 0x280              # 0x38C60280
	lis r11, 0x80b8                 # 0x3D6080B8
	lwz r11, 0x7c28(r11)            # 0x816B7C28
	lwz r11, 0x154(r11)             # 0x816B0154
	lwz r11, 0x0(r11)               # 0x816B0000
	b 0x8                           # 0x48000008
	addi r11, r11, 0x244            # 0x396B0244
	lwz r10, 0x2c(r11)              # 0x814B002C
	cmpw r10, r6                    # 0x7C0A3000
	bne -0xc                        # 0x4082FFF4
	cmpwi r0, 0x10                  # 0x2C000010
	bne 0x8                         # 0x40A20008
	addi r11, r11, 0x8              # 0x396B0008
	mr r6, r5                       # 0x7CA62B78
	lwz r5, 0x34(r11)               # 0x80AB0034
	lwz r5, 0x60(r5)                # 0x80A50060
	stfd f0, 0x20(r2)               # 0xD8020020
	stfd f2, 0x28(r2)               # 0xD8420028
	stfd f3, 0x30(r2)               # 0xD8620030
	stfd f4, 0x38(r2)               # 0xD8820038
	stfd f5, 0x40(r2)               # 0xD8A20040
	li r10, 0x0                     # 0x39400000
	mtctr r12                       # 0x7D8903A6
	bctrl                           # 0x4E800421
	cmpwi r10, 0x1                  # 0x2C0A0001
	bne 0x20                        # 0x40820020
	lis r11, 0x4330                 # 0x3D604330
	stw r11, 0x10(r2)               # 0x91620010
	lfd f0, -0x7b90(r2)             # 0xC8028470
	xoris r12, r12, 0x8000          # 0x6D8C8000
	stw r12, 0x14(r2)               # 0x91820014
	lfd f1, 0x10(r2)                # 0xC8220010
	fsub f1, f1, f0                 # 0xFC210028
	lfd f0, 0x20(r2)                # 0xC8020020
	lfd f2, 0x28(r2)                # 0xC8420028
	lfd f3, 0x30(r2)                # 0xC8620030
	lfd f4, 0x38(r2)                # 0xC8820038
	lfd f5, 0x40(r2)                # 0xC8A20040
	lis r12, 0x8091                 # 0x3D808091
	ori r12, r12, 0xe440            # 0x618CE440
	mtctr r12                       # 0x7D8903A6
	bctr                            # 0x4E800420
	li r0, 0x2f                     # 0x3800002F
	cmplwi r0, 0x2e                 # 0x2800002E
	nop                             # 0x60000000
}

Custom AI Functions [Magus]
* 0458047C 00000078             # 32-Bit Write @ $(ba + 0x0058047C):  0x00000078
* 06580480 00000078             # String Write (120 characters) @ $(ba + 0x00580480):
* 80580580 80580590             # 	0x80, 0x58, 0x05, 0x80, 0x80, 0x58, 0x05, 0x90
* 805805A0 805805B0             # 	0x80, 0x58, 0x05, 0xA0, 0x80, 0x58, 0x05, 0xB0
* 805805BC 805805DC             # 	0x80, 0x58, 0x05, 0xBC, 0x80, 0x58, 0x05, 0xDC
* 805805FC 80580610             # 	0x80, 0x58, 0x05, 0xFC, 0x80, 0x58, 0x06, 0x10
* 80580624 80580654             # 	0x80, 0x58, 0x06, 0x24, 0x80, 0x58, 0x06, 0x54
* 805806FC 80580708             # 	0x80, 0x58, 0x06, 0xFC, 0x80, 0x58, 0x07, 0x08
* 80580714 80580720             # 	0x80, 0x58, 0x07, 0x14, 0x80, 0x58, 0x07, 0x20
* 8058072C 80580744             # 	0x80, 0x58, 0x07, 0x2C, 0x80, 0x58, 0x07, 0x44
* 80580750 80580768             # 	0x80, 0x58, 0x07, 0x50, 0x80, 0x58, 0x07, 0x68
* 80580780 805807B4             # 	0x80, 0x58, 0x07, 0x80, 0x80, 0x58, 0x07, 0xB4
* 805807CC 805807DC             # 	0x80, 0x58, 0x07, 0xCC, 0x80, 0x58, 0x07, 0xDC
* 805807F4 80580804             # 	0x80, 0x58, 0x07, 0xF4, 0x80, 0x58, 0x08, 0x04
* 80580820 80580820             # 	0x80, 0x58, 0x08, 0x20, 0x80, 0x58, 0x08, 0x20
* 80580820 80580820             # 	0x80, 0x58, 0x08, 0x20, 0x80, 0x58, 0x08, 0x20
* 805808D4 805808D4             # 	0x80, 0x58, 0x08, 0xD4, 0x80, 0x58, 0x08, 0xD4
* 06580580 00000010             # String Write (16 characters) @ $(ba + 0x00580580):
* 8185007C 818C0034             # 	0x81, 0x85, 0x00, 0x7C, 0x81, 0x8C, 0x00, 0x34
* 39400001 4E800020             # 	0x39, 0x40, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20
* 06580590 00000010             # String Write (16 characters) @ $(ba + 0x00580590):
* 8185007C A18C0006             # 	0x81, 0x85, 0x00, 0x7C, 0xA1, 0x8C, 0x00, 0x06
* 39400001 4E800020             # 	0x39, 0x40, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20
* 065805A0 00000010             # String Write (16 characters) @ $(ba + 0x005805A0):
* 81850014 818C0058             # 	0x81, 0x85, 0x00, 0x14, 0x81, 0x8C, 0x00, 0x58
* 39400001 4E800020             # 	0x39, 0x40, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20
* 065805B0 0000000C             # String Write (12 characters) @ $(ba + 0x005805B0):
* 81850014 C02C0040             # 	0x81, 0x85, 0x00, 0x14, 0xC0, 0x2C, 0x00, 0x40
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 065805BC 00000020             # String Write (32 characters) @ $(ba + 0x005805BC):
* 81850028 C02C0040             # 	0x81, 0x85, 0x00, 0x28, 0xC0, 0x2C, 0x00, 0x40
* 81850088 818C0014             # 	0x81, 0x85, 0x00, 0x88, 0x81, 0x8C, 0x00, 0x14
* 818C004C C00C0008             # 	0x81, 0x8C, 0x00, 0x4C, 0xC0, 0x0C, 0x00, 0x08
* EC210028 4E800020             # 	0xEC, 0x21, 0x00, 0x28, 0x4E, 0x80, 0x00, 0x20
* 065805DC 00000020             # String Write (32 characters) @ $(ba + 0x005805DC):
* 81850028 C02C0044             # 	0x81, 0x85, 0x00, 0x28, 0xC0, 0x2C, 0x00, 0x44
* 81850088 818C0014             # 	0x81, 0x85, 0x00, 0x88, 0x81, 0x8C, 0x00, 0x14
* 818C004C C00C000C             # 	0x81, 0x8C, 0x00, 0x4C, 0xC0, 0x0C, 0x00, 0x0C
* EC210028 4E800020             # 	0xEC, 0x21, 0x00, 0x28, 0x4E, 0x80, 0x00, 0x20
* 065805FC 00000014             # String Write (20 characters) @ $(ba + 0x005805FC):
* 81850088 818C0014             # 	0x81, 0x85, 0x00, 0x88, 0x81, 0x8C, 0x00, 0x14
* 818C004C C02C0008             # 	0x81, 0x8C, 0x00, 0x4C, 0xC0, 0x2C, 0x00, 0x08
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 06580610 00000014             # String Write (20 characters) @ $(ba + 0x00580610):
* 81850088 818C0014             # 	0x81, 0x85, 0x00, 0x88, 0x81, 0x8C, 0x00, 0x14
* 818C004C C02C000C             # 	0x81, 0x8C, 0x00, 0x4C, 0xC0, 0x2C, 0x00, 0x0C
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 06580624 00000030             # String Write (48 characters) @ $(ba + 0x00580624):
* 81850088 818C0014             # 	0x81, 0x85, 0x00, 0x88, 0x81, 0x8C, 0x00, 0x14
* 818C004C C00C0008             # 	0x81, 0x8C, 0x00, 0x4C, 0xC0, 0x0C, 0x00, 0x08
* C02C000C EC000032             # 	0xC0, 0x2C, 0x00, 0x0C, 0xEC, 0x00, 0x00, 0x32
* EC210072 EC20082A             # 	0xEC, 0x21, 0x00, 0x72, 0xEC, 0x20, 0x08, 0x2A
* FC200834 C002A458             # 	0xFC, 0x20, 0x08, 0x34, 0xC0, 0x02, 0xA4, 0x58
* EC200824 4E800020             # 	0xEC, 0x20, 0x08, 0x24, 0x4E, 0x80, 0x00, 0x20
* 06580654 000000A8             # String Write (168 characters) @ $(ba + 0x00580654):
* 81850088 818C0014             # 	0x81, 0x85, 0x00, 0x88, 0x81, 0x8C, 0x00, 0x14
* 818C004C C82C0008             # 	0x81, 0x8C, 0x00, 0x4C, 0xC8, 0x2C, 0x00, 0x08
* C002A460 FC010040             # 	0xC0, 0x02, 0xA4, 0x60, 0xFC, 0x01, 0x00, 0x40
* 40A2000C C022A464             # 	0x40, 0xA2, 0x00, 0x0C, 0xC0, 0x22, 0xA4, 0x64
* 48000080 C02C0008             # 	0x48, 0x00, 0x00, 0x80, 0xC0, 0x2C, 0x00, 0x08
* C04C000C 81850018             # 	0xC0, 0x4C, 0x00, 0x0C, 0x81, 0x85, 0x00, 0x18
* C06C0040 FC601850             # 	0xC0, 0x6C, 0x00, 0x40, 0xFC, 0x60, 0x18, 0x50
* EC2100F2 FC600090             # 	0xEC, 0x21, 0x00, 0xF2, 0xFC, 0x60, 0x00, 0x90
* FC010040 40A20008             # 	0xFC, 0x01, 0x00, 0x40, 0x40, 0xA2, 0x00, 0x08
* C022966C 40A0000C             # 	0xC0, 0x22, 0x96, 0x6C, 0x40, 0xA0, 0x00, 0x0C
* C062A4D0 48000014             # 	0xC0, 0x62, 0xA4, 0xD0, 0x48, 0x00, 0x00, 0x14
* FC020040 40A0000C             # 	0xFC, 0x02, 0x00, 0x40, 0x40, 0xA0, 0x00, 0x0C
* C062A4D0 EC63182A             # 	0xC0, 0x62, 0xA4, 0xD0, 0xEC, 0x63, 0x18, 0x2A
* D062001C EC220824             # 	0xD0, 0x62, 0x00, 0x1C, 0xEC, 0x22, 0x08, 0x24
* 7C0802A6 90020018             # 	0x7C, 0x08, 0x02, 0xA6, 0x90, 0x02, 0x00, 0x18
* 3D808040 618C012C             # 	0x3D, 0x80, 0x80, 0x40, 0x61, 0x8C, 0x01, 0x2C
* 7D8903A6 4E800421             # 	0x7D, 0x89, 0x03, 0xA6, 0x4E, 0x80, 0x04, 0x21
* C002001C EC21002A             # 	0xC0, 0x02, 0x00, 0x1C, 0xEC, 0x21, 0x00, 0x2A
* C0028B94 EC210032             # 	0xC0, 0x02, 0x8B, 0x94, 0xEC, 0x21, 0x00, 0x32
* 80020018 7C0803A6             # 	0x80, 0x02, 0x00, 0x18, 0x7C, 0x08, 0x03, 0xA6
* 39400000 4E800020             # 	0x39, 0x40, 0x00, 0x00, 0x4E, 0x80, 0x00, 0x20
* 065806FC 0000000C             # String Write (12 characters) @ $(ba + 0x005806FC):
* 81850028 C02C0040             # 	0x81, 0x85, 0x00, 0x28, 0xC0, 0x2C, 0x00, 0x40
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 06580708 0000000C             # String Write (12 characters) @ $(ba + 0x00580708):
* 81850028 C02C0044             # 	0x81, 0x85, 0x00, 0x28, 0xC0, 0x2C, 0x00, 0x44
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 06580714 0000000C             # String Write (12 characters) @ $(ba + 0x00580714):
* 81850018 C02C000C             # 	0x81, 0x85, 0x00, 0x18, 0xC0, 0x2C, 0x00, 0x0C
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 06580720 0000000C             # String Write (12 characters) @ $(ba + 0x00580720):
* 81850018 C02C0010             # 	0x81, 0x85, 0x00, 0x18, 0xC0, 0x2C, 0x00, 0x10
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 0658072C 00000018             # String Write (24 characters) @ $(ba + 0x0058072C):
* 8185001C 818C0028             # 	0x81, 0x85, 0x00, 0x1C, 0x81, 0x8C, 0x00, 0x28
* 818C0010 818C0060             # 	0x81, 0x8C, 0x00, 0x10, 0x81, 0x8C, 0x00, 0x60
* C02C0018 4E800020             # 	0xC0, 0x2C, 0x00, 0x18, 0x4E, 0x80, 0x00, 0x20
* 06580744 0000000C             # String Write (12 characters) @ $(ba + 0x00580744):
* 818500D0 C02C0074             # 	0x81, 0x85, 0x00, 0xD0, 0xC0, 0x2C, 0x00, 0x74
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 06580750 00000018             # String Write (24 characters) @ $(ba + 0x00580750):
* 8185001C 818C0028             # 	0x81, 0x85, 0x00, 0x1C, 0x81, 0x8C, 0x00, 0x28
* 818C0010 818CFFFC             # 	0x81, 0x8C, 0x00, 0x10, 0x81, 0x8C, 0xFF, 0xFC
* 39400001 4E800020             # 	0x39, 0x40, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20
* 06580768 00000018             # String Write (24 characters) @ $(ba + 0x00580768):
* 8185001C 818C0028             # 	0x81, 0x85, 0x00, 0x1C, 0x81, 0x8C, 0x00, 0x28
* 818C0010 898C0008             # 	0x81, 0x8C, 0x00, 0x10, 0x89, 0x8C, 0x00, 0x08
* 39400001 4E800020             # 	0x39, 0x40, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20
* 06580780 00000034             # String Write (52 characters) @ $(ba + 0x00580780):
* 81850014 818C0058             # 	0x81, 0x85, 0x00, 0x14, 0x81, 0x8C, 0x00, 0x58
* 2C0C00A9 41820010             # 	0x2C, 0x0C, 0x00, 0xA9, 0x41, 0x82, 0x00, 0x10
* 81850050 818C0010             # 	0x81, 0x85, 0x00, 0x50, 0x81, 0x8C, 0x00, 0x10
* 48000014 81850070             # 	0x48, 0x00, 0x00, 0x14, 0x81, 0x85, 0x00, 0x70
* 818C0024 818C000C             # 	0x81, 0x8C, 0x00, 0x24, 0x81, 0x8C, 0x00, 0x0C
* 818C0008 39400001             # 	0x81, 0x8C, 0x00, 0x08, 0x39, 0x40, 0x00, 0x01
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 065807B4 00000018             # String Write (24 characters) @ $(ba + 0x005807B4):
* 81850070 818C0020             # 	0x81, 0x85, 0x00, 0x70, 0x81, 0x8C, 0x00, 0x20
* 818C000C 818C00E0             # 	0x81, 0x8C, 0x00, 0x0C, 0x81, 0x8C, 0x00, 0xE0
* 39400001 4E800020             # 	0x39, 0x40, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20
* 065807CC 00000010             # String Write (16 characters) @ $(ba + 0x005807CC):
* 81850068 898C008F             # 	0x81, 0x85, 0x00, 0x68, 0x89, 0x8C, 0x00, 0x8F
* 39400001 4E800020             # 	0x39, 0x40, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20
* 065807DC 00000018             # String Write (24 characters) @ $(ba + 0x005807DC):
* 81850070 818C0020             # 	0x81, 0x85, 0x00, 0x70, 0x81, 0x8C, 0x00, 0x20
* 818C000C 818C00B0             # 	0x81, 0x8C, 0x00, 0x0C, 0x81, 0x8C, 0x00, 0xB0
* 39400001 4E800020             # 	0x39, 0x40, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20
* 065807F4 00000010             # String Write (16 characters) @ $(ba + 0x005807F4):
* 8185007C 898C007F             # 	0x81, 0x85, 0x00, 0x7C, 0x89, 0x8C, 0x00, 0x7F
* 39400001 4E800020             # 	0x39, 0x40, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20
* 06580804 0000001C             # String Write (28 characters) @ $(ba + 0x00580804):
* 81850070 818C0024             # 	0x81, 0x85, 0x00, 0x70, 0x81, 0x8C, 0x00, 0x24
* 818C001C 818C0000             # 	0x81, 0x8C, 0x00, 0x1C, 0x81, 0x8C, 0x00, 0x00
* 558CF7FE 39400001             # 	0x55, 0x8C, 0xF7, 0xFE, 0x39, 0x40, 0x00, 0x01
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 06580820 000000B4             # String Write (180 characters) @ $(ba + 0x00580820):
* 81850018 C00C000C             # 	0x81, 0x85, 0x00, 0x18, 0xC0, 0x0C, 0x00, 0x0C
* 816300BC C02B0018             # 	0x81, 0x63, 0x00, 0xBC, 0xC0, 0x2B, 0x00, 0x18
* C04B001C C06B0020             # 	0xC0, 0x4B, 0x00, 0x1C, 0xC0, 0x6B, 0x00, 0x20
* C08B0024 FC011840             # 	0xC0, 0x8B, 0x00, 0x24, 0xFC, 0x01, 0x18, 0x40
* 40A10014 C02B0020             # 	0x40, 0xA1, 0x00, 0x14, 0xC0, 0x2B, 0x00, 0x20
* C04B0024 C06B0018             # 	0xC0, 0x4B, 0x00, 0x24, 0xC0, 0x6B, 0x00, 0x18
* C08B001C 57E807FE             # 	0xC0, 0x8B, 0x00, 0x1C, 0x57, 0xE8, 0x07, 0xFE
* 57E9063E 880300C0             # 	0x57, 0xE9, 0x06, 0x3E, 0x88, 0x03, 0x00, 0xC0
* 28000002 800C0040             # 	0x28, 0x00, 0x00, 0x02, 0x80, 0x0C, 0x00, 0x40
* 40820020 ECA30028             # 	0x40, 0x82, 0x00, 0x20, 0xEC, 0xA3, 0x00, 0x28
* EC010028 FC000210             # 	0xEC, 0x01, 0x00, 0x28, 0xFC, 0x00, 0x02, 0x10
* FCA02A10 FC002840             # 	0xFC, 0xA0, 0x2A, 0x10, 0xFC, 0x00, 0x28, 0x40
* 4081002C 48000020             # 	0x40, 0x81, 0x00, 0x2C, 0x48, 0x00, 0x00, 0x20
* 2C080000 41820010             # 	0x2C, 0x08, 0x00, 0x00, 0x41, 0x82, 0x00, 0x10
* 2C000000 40800010             # 	0x2C, 0x00, 0x00, 0x00, 0x40, 0x80, 0x00, 0x10
* 48000014 2C000000             # 	0x48, 0x00, 0x00, 0x14, 0x2C, 0x00, 0x00, 0x00
* 4080000C FC201890             # 	0x40, 0x80, 0x00, 0x0C, 0xFC, 0x20, 0x18, 0x90
* FC402090 2C090049             # 	0xFC, 0x40, 0x20, 0x90, 0x2C, 0x09, 0x00, 0x49
* 40800018 C00C000C             # 	0x40, 0x80, 0x00, 0x18, 0xC0, 0x0C, 0x00, 0x0C
* C06C0040 EC210028             # 	0xC0, 0x6C, 0x00, 0x40, 0xEC, 0x21, 0x00, 0x28
* EC2100F2 4800000C             # 	0xEC, 0x21, 0x00, 0xF2, 0x48, 0x00, 0x00, 0x0C
* C00C0010 EC220028             # 	0xC0, 0x0C, 0x00, 0x10, 0xEC, 0x22, 0x00, 0x28
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20
* 065808D4 00000060             # String Write (96 characters) @ $(ba + 0x005808D4):
* 8065001C 81830028             # 	0x80, 0x65, 0x00, 0x1C, 0x81, 0x83, 0x00, 0x28
* 818C0010 818C0060             # 	0x81, 0x8C, 0x00, 0x10, 0x81, 0x8C, 0x00, 0x60
* 388C0014 C0229654             # 	0x38, 0x8C, 0x00, 0x14, 0xC0, 0x22, 0x96, 0x54
* 7C0802A6 90020018             # 	0x7C, 0x08, 0x02, 0xA6, 0x90, 0x02, 0x00, 0x18
* 3D808073 618C4F8C             # 	0x3D, 0x80, 0x80, 0x73, 0x61, 0x8C, 0x4F, 0x8C
* 7D8903A6 4E800421             # 	0x7D, 0x89, 0x03, 0xA6, 0x4E, 0x80, 0x04, 0x21
* C002A464 FC010040             # 	0xC0, 0x02, 0xA4, 0x64, 0xFC, 0x01, 0x00, 0x40
* 41820010 FC205050             # 	0x41, 0x82, 0x00, 0x10, 0xFC, 0x20, 0x50, 0x50
* 39800001 48000008             # 	0x39, 0x80, 0x00, 0x01, 0x48, 0x00, 0x00, 0x08
* 39800000 80020018             # 	0x39, 0x80, 0x00, 0x00, 0x80, 0x02, 0x00, 0x18
* 7C0803A6 57E9063E             # 	0x7C, 0x08, 0x03, 0xA6, 0x57, 0xE9, 0x06, 0x3E
* 3949FFB5 4E800020             # 	0x39, 0x49, 0xFF, 0xB5, 0x4E, 0x80, 0x00, 0x20

Custom AI Requirement Loader[Bero]
HOOK @ $8091E554                # Address = $(ba + 0x0091E554)
{
	cmplwi r0, 0x1f                 # 0x2800001F
	ble 0x54                        # 0x40810054
	lis r3, 0x8058                  # 0x3C608058
	ori r3, r3, 0x2e6c              # 0x60632E6C
	lwz r3, 0x0(r3)                 # 0x80630000
	mr r4, r0                       # 0x7C040378
	subi r4, r4, 0x20               # 0x3884FFE0
	cmplw r4, r3                    # 0x7C041840
	bge 0x30                        # 0x40800030
	lis r3, 0x8058                  # 0x3C608058
	ori r3, r3, 0x2e70              # 0x60632E70
	rlwinm r4, r4, 2, 0, 29         # (Mask: 0x3fffffff)# 0x5484103A
	add r3, r3, r4                  # 0x7C632214
	lwz r3, 0x0(r3)                 # 0x80630000
	mtctr r3                        # 0x7C6903A6
	bctrl                           # 0x4E800421
	lis r3, 0x8091                  # 0x3C608091
	ori r3, r3, 0xed20              # 0x6063ED20
	mtctr r3                        # 0x7C6903A6
	bctr                            # 0x4E800420
	li r0, 0x20                     # 0x38000020
	cmplwi r0, 0x1f                 # 0x2800001F
	nop                             # 0x60000000
}

Custom AI Requirement Table[Bero]
* 04582E6C 00000002             # 32-Bit Write @ $(ba + 0x00582E6C):  0x00000002
* 06582E70 00000008             # String Write (8 characters) @ $(ba + 0x00582E70):
* 80583000 80583050             # 	0x80, 0x58, 0x30, 0x00, 0x80, 0x58, 0x30, 0x50

req Equal : 0x1020 lhs rhs[Bero]
* 06583000 00000050             # String Write (80 characters) @ $(ba + 0x00583000):
* 7F8802A6 8098000C             # 	0x7F, 0x88, 0x02, 0xA6, 0x80, 0x98, 0x00, 0x0C
* 7EE3BB78 38A00000             # 	0x7E, 0xE3, 0xBB, 0x78, 0x38, 0xA0, 0x00, 0x00
* 3FA08091 63BDDFC4             # 	0x3F, 0xA0, 0x80, 0x91, 0x63, 0xBD, 0xDF, 0xC4
* 7FA903A6 4E800421             # 	0x7F, 0xA9, 0x03, 0xA6, 0x4E, 0x80, 0x04, 0x21
* FFE00890 80980008             # 	0xFF, 0xE0, 0x08, 0x90, 0x80, 0x98, 0x00, 0x08
* 7EE3BB78 38A00000             # 	0x7E, 0xE3, 0xBB, 0x78, 0x38, 0xA0, 0x00, 0x00
* 7FA903A6 4E800421             # 	0x7F, 0xA9, 0x03, 0xA6, 0x4E, 0x80, 0x04, 0x21
* 7F8803A6 3B800000             # 	0x7F, 0x88, 0x03, 0xA6, 0x3B, 0x80, 0x00, 0x00
* FC01F840 4C820020             # 	0xFC, 0x01, 0xF8, 0x40, 0x4C, 0x82, 0x00, 0x20
* 3B800001 4E800020             # 	0x3B, 0x80, 0x00, 0x01, 0x4E, 0x80, 0x00, 0x20

req IsStage : 0x1021 ID[Bero]
* 06583050 00000050             # String Write (80 characters) @ $(ba + 0x00583050):
* 7F8802A6 80980008             # 	0x7F, 0x88, 0x02, 0xA6, 0x80, 0x98, 0x00, 0x08
* 7EE3BB78 38A00000             # 	0x7E, 0xE3, 0xBB, 0x78, 0x38, 0xA0, 0x00, 0x00
* 3FA08091 63BDDFC4             # 	0x3F, 0xA0, 0x80, 0x91, 0x63, 0xBD, 0xDF, 0xC4
* 7FA903A6 4E800421             # 	0x7F, 0xA9, 0x03, 0xA6, 0x4E, 0x80, 0x04, 0x21
* FC00081E D8020020             # 	0xFC, 0x00, 0x08, 0x1E, 0xD8, 0x02, 0x00, 0x20
* 80620024 3C808062             # 	0x80, 0x62, 0x00, 0x24, 0x3C, 0x80, 0x80, 0x62
* 60843090 80840000             # 	0x60, 0x84, 0x30, 0x90, 0x80, 0x84, 0x00, 0x00
* 7C041800 7F8803A6             # 	0x7C, 0x04, 0x18, 0x00, 0x7F, 0x88, 0x03, 0xA6
* 3B800001 4D820020             # 	0x3B, 0x80, 0x00, 0x01, 0x4D, 0x82, 0x00, 0x20
* 3B800000 4E800020             # 	0x3B, 0x80, 0x00, 0x00, 0x4E, 0x80, 0x00, 0x20

Custom AI Command Loader[Bero]
HOOK @ $80917454                # Address = $(ba + 0x00917454)
{
	cmplwi r4, 0x32                 # 0x28040032
	ble 0x4c                        # 0x4081004C
	subi r4, r4, 0x33               # 0x3884FFCD
	lis r3, 0x8058                  # 0x3C608058
	ori r3, r3, 0x6ffc              # 0x60636FFC
	lwz r3, 0x0(r3)                 # 0x80630000
	cmpw r4, r3                     # 0x7C041800
	bge 0x2c                        # 0x4080002C
	lis r3, 0x8058                  # 0x3C608058
	ori r3, r3, 0x7000              # 0x60637000
	rlwinm r4, r4, 2, 0, 29         # (Mask: 0x3fffffff)# 0x5484103A
	lwzx r3, r3, r4                 # 0x7C63202E
	mtctr r3                        # 0x7C6903A6
	bctrl                           # 0x4E800421
	lis r3, 0x8091                  # 0x3C608091
	ori r3, r3, 0x81c4              # 0x606381C4
	mtctr r3                        # 0x7C6903A6
	bctr                            # 0x4E800420
	li r4, 0x33                     # 0x38800033
	cmplwi r4, 0x32                 # 0x28040032
	nop                             # 0x60000000
}

Custom AI Command Table[Bero]
* 04586FFC 00000001             # 32-Bit Write @ $(ba + 0x00586FFC):  0x00000001
* 06587000 00000008             # String Write (8 characters) @ $(ba + 0x00587000):
* 80587200 00000000             # 	0x80, 0x58, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00

cmd RetrieveATKD : 0x33 variable subaction opponent[Bero]
* 06587200 00000108             # String Write (264 characters) @ $(ba + 0x00587200):
* 7F2802A6 809E0008             # 	0x7F, 0x28, 0x02, 0xA6, 0x80, 0x9E, 0x00, 0x08
* 7F43D378 38A00000             # 	0x7F, 0x43, 0xD3, 0x78, 0x38, 0xA0, 0x00, 0x00
* 3CC08091 60C6DFC4             # 	0x3C, 0xC0, 0x80, 0x91, 0x60, 0xC6, 0xDF, 0xC4
* 7CC903A6 4E800421             # 	0x7C, 0xC9, 0x03, 0xA6, 0x4E, 0x80, 0x04, 0x21
* FC00081E D8010048             # 	0xFC, 0x00, 0x08, 0x1E, 0xD8, 0x01, 0x00, 0x48
* 8081004C 807A0070             # 	0x80, 0x81, 0x00, 0x4C, 0x80, 0x7A, 0x00, 0x70
* 80BE000C 2C050001             # 	0x80, 0xBE, 0x00, 0x0C, 0x2C, 0x05, 0x00, 0x01
* 40820024 88A30110             # 	0x40, 0x82, 0x00, 0x24, 0x88, 0xA3, 0x01, 0x10
* 3C608128 6063BC30             # 	0x3C, 0x60, 0x81, 0x28, 0x60, 0x63, 0xBC, 0x30
* 3CC00005 60C62000             # 	0x3C, 0xC0, 0x00, 0x05, 0x60, 0xC6, 0x20, 0x00
* 7CC629D6 7C633214             # 	0x7C, 0xC6, 0x29, 0xD6, 0x7C, 0x63, 0x32, 0x14
* 80630000 80630094             # 	0x80, 0x63, 0x00, 0x00, 0x80, 0x63, 0x00, 0x94
* 80A30004 7CA903A6             # 	0x80, 0xA3, 0x00, 0x04, 0x7C, 0xA9, 0x03, 0xA6
* 38630010 88C30001             # 	0x38, 0x63, 0x00, 0x10, 0x88, 0xC3, 0x00, 0x01
* 7C043000 41820010             # 	0x7C, 0x04, 0x30, 0x00, 0x41, 0x82, 0x00, 0x10
* 38630018 4200FFF0             # 	0x38, 0x63, 0x00, 0x18, 0x42, 0x00, 0xFF, 0xF0
* 48000064 809E0004             # 	0x48, 0x00, 0x00, 0x64, 0x80, 0x9E, 0x00, 0x04
* 5484103A 7C84D214             # 	0x54, 0x84, 0x10, 0x3A, 0x7C, 0x84, 0xD2, 0x14
* 38630004 38A00002             # 	0x38, 0x63, 0x00, 0x04, 0x38, 0xA0, 0x00, 0x02
* 7CA903A6 A0A30000             # 	0x7C, 0xA9, 0x03, 0xA6, 0xA0, 0xA3, 0x00, 0x00
* 92E10048 6CA58000             # 	0x92, 0xE1, 0x00, 0x48, 0x6C, 0xA5, 0x80, 0x00
* 90A1004C C8010048             # 	0x90, 0xA1, 0x00, 0x4C, 0xC8, 0x01, 0x00, 0x48
* EC00E028 D0040000             # 	0xEC, 0x00, 0xE0, 0x28, 0xD0, 0x04, 0x00, 0x00
* 38630002 38840004             # 	0x38, 0x63, 0x00, 0x02, 0x38, 0x84, 0x00, 0x04
* 4200FFDC 38A00004             # 	0x42, 0x00, 0xFF, 0xDC, 0x38, 0xA0, 0x00, 0x04
* 7CA903A6 C0230000             # 	0x7C, 0xA9, 0x03, 0xA6, 0xC0, 0x23, 0x00, 0x00
* D0240000 38630004             # 	0xD0, 0x24, 0x00, 0x00, 0x38, 0x63, 0x00, 0x04
* 38840004 4200FFF0             # 	0x38, 0x84, 0x00, 0x04, 0x42, 0x00, 0xFF, 0xF0
* 48000018 3C60BF80             # 	0x48, 0x00, 0x00, 0x18, 0x3C, 0x60, 0xBF, 0x80
* 60630000 809E0004             # 	0x60, 0x63, 0x00, 0x00, 0x80, 0x9E, 0x00, 0x04
* 5484103A 7C7A212E             # 	0x54, 0x84, 0x10, 0x3A, 0x7C, 0x7A, 0x21, 0x2E
* 7F2803A6 3B200002             # 	0x7F, 0x28, 0x03, 0xA6, 0x3B, 0x20, 0x00, 0x02
* 4E800020 00000000             # 	0x4E, 0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00

CPU falls from respawn plane when Turbo[Bero]
* 04909B10 4BC7C9F0             # 32-Bit Write @ $(ba + 0x00909B10):  0x4BC7C9F0
* 06586500 00000038             # String Write (56 characters) @ $(ba + 0x00586500):
* 2C030001 40810008             # 	0x2C, 0x03, 0x00, 0x01, 0x40, 0x81, 0x00, 0x08
* 48000028 80980044             # 	0x48, 0x00, 0x00, 0x28, 0x80, 0x98, 0x00, 0x44
* 80840074 808400B4             # 	0x80, 0x84, 0x00, 0x74, 0x80, 0x84, 0x00, 0xB4
* 2C0400BE 4182000C             # 	0x2C, 0x04, 0x00, 0xBE, 0x41, 0x82, 0x00, 0x0C
* 2C030001 4800000C             # 	0x2C, 0x03, 0x00, 0x01, 0x48, 0x00, 0x00, 0x0C
* 38600007 483837A8             # 	0x38, 0x60, 0x00, 0x07, 0x48, 0x38, 0x37, 0xA8
* 483835E4 00000000             # 	0x48, 0x38, 0x35, 0xE4, 0x00, 0x00, 0x00, 0x00

Ledge hanging/Lying routine injection(ledge:0x2060, lying:0x2070)[Bero]
HOOK @ $809091E4                # Address = $(ba + 0x009091E4)
{
	mr r28, r3                      # 0x7C7C1B78
	lbz r4, 0x1ba(r28)              # 0x889C01BA
	cmpwi r4, 0x6                   # 0x2C040006
	beq 0x1c                        # 0x4182001C
	cmpwi r4, 0x7                   # 0x2C040007
	beq 0x14                        # 0x41820014
	cmpwi r4, 0x4                   # 0x2C040004
	bne 0xa4                        # 0x408200A4
	li r4, 0x2070                   # 0x38802070
	b 0x8                           # 0x48000008
	li r4, 0x2060                   # 0x38802060
	lwz r3, 0x44(r24)               # 0x80780044
	li r5, 0xffff                   # 0x38A0FFFF
	stw r5, 0x64(r1)                # 0x90A10064
	addi r5, r1, 0x64               # 0x38A10064
	li r6, 0x0                      # 0x38C00000
	li r7, 0x0                      # 0x38E00000
	lis r8, 0x8091                  # 0x3D008091
	ori r8, r8, 0x8554              # 0x61088554
	mtctr r8                        # 0x7D0903A6
	bctrl                           # 0x4E800421
	lwz r3, 0x44(r24)               # 0x80780044
	lwz r3, 0x64(r3)                # 0x80630064
	cmpwi r3, 0x0                   # 0x2C030000
	beq 0x34                        # 0x41820034
	mr r3, r24                      # 0x7F03C378
	li r4, 0x0                      # 0x38800000
	li r5, 0x0                      # 0x38A00000
	lis r6, 0x8090                  # 0x3CC08090
	ori r6, r6, 0x8bd4              # 0x60C68BD4
	mtctr r6                        # 0x7CC903A6
	bctrl                           # 0x4E800421
	stb r3, 0x110(r24)              # 0x98780110
	lis r3, 0x8090                  # 0x3C608090
	ori r3, r3, 0x9d18              # 0x60639D18
	mtctr r3                        # 0x7C6903A6
	bctr                            # 0x4E800420
	lwz r3, 0x44(r24)               # 0x80780044
	li r4, 0x0                      # 0x38800000
	li r5, 0xffff                   # 0x38A0FFFF
	stw r5, 0x64(r1)                # 0x90A10064
	addi r5, r1, 0x64               # 0x38A10064
	li r6, 0x0                      # 0x38C00000
	li r7, 0x0                      # 0x38E00000
	lis r8, 0x8091                  # 0x3D008091
	ori r8, r8, 0x8554              # 0x61088554
	mtctr r8                        # 0x7D0903A6
	bctrl                           # 0x4E800421
	nop                             # 0x60000000
}

CE AI Input Fix [ds22]
* 04914AB4 60000000             # 32-Bit Write @ $(ba + 0x00914AB4):  0x60000000
* 04B27ACC 80914AB0             # 32-Bit Write @ $(ba + 0x00B27ACC):  0x80914AB0
* 04B27AD0 809144F0             # 32-Bit Write @ $(ba + 0x00B27AD0):  0x809144F0
* 04B27AE0 809139FC             # 32-Bit Write @ $(ba + 0x00B27AE0):  0x809139FC
* 04B27AE8 80914FD0             # 32-Bit Write @ $(ba + 0x00B27AE8):  0x80914FD0
